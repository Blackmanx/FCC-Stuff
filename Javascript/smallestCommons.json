{"index.js":"function smallestCommons(arr) {\n/**\n *  LCM(a,b) =  (|a Â· b|) / (gcd(a,b))\n * \n *  gcd(a, 0) = a\n *  gcd(a, b) = gcd(b, a mod b)\n * If a && b > 0 => gcd(a,b) = gcd (a-b, b) if (a > b)\n * gcd(a,b) = gcd(a,b-a) if (b> a)\n */\n  let min = Math.min.apply(null, arr);\n  let max = Math.max.apply(null, arr);\n  let scm = lcm(min, min + 1);\n  while(min < max){\n    min++;\n    scm = lcm(scm, min);\n  }\n\n  return scm;\n}\n\nfunction lcm(a, b){\n  let absoluteMul = Math.abs(a * b);\n\nreturn absoluteMul / gcd(a,b);\n}\n\nfunction gcd(a, b){\n  let result;\n  \n  if (a === b || b === 0) {\n    return a;\n  } else if (a > b) {\n    result = gcd((a - b), b);\n  } else if (a < b) {\n    result = gcd(a, (b - a));\n  }\n  \n  return result;\n}\nsmallestCommons([1,5]);"}